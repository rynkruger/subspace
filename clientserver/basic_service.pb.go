// Code generated by protoc-gen-go.
// source: clientserver/basic_service.proto
// DO NOT EDIT!

/*
Package clientserver is a generated protocol buffer package.

It is generated from these files:
	clientserver/basic_service.proto

It has these top-level messages:
	Command
	Info
*/
package clientserver

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Command struct {
	Text string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Command) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Info struct {
	Text string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
}

func (m *Info) Reset()                    { *m = Info{} }
func (m *Info) String() string            { return proto.CompactTextString(m) }
func (*Info) ProtoMessage()               {}
func (*Info) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Info) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*Command)(nil), "clientserver.Command")
	proto.RegisterType((*Info)(nil), "clientserver.Info")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Game service

type GameClient interface {
	Play(ctx context.Context, opts ...grpc.CallOption) (Game_PlayClient, error)
}

type gameClient struct {
	cc *grpc.ClientConn
}

func NewGameClient(cc *grpc.ClientConn) GameClient {
	return &gameClient{cc}
}

func (c *gameClient) Play(ctx context.Context, opts ...grpc.CallOption) (Game_PlayClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Game_serviceDesc.Streams[0], c.cc, "/clientserver.Game/Play", opts...)
	if err != nil {
		return nil, err
	}
	x := &gamePlayClient{stream}
	return x, nil
}

type Game_PlayClient interface {
	Send(*Command) error
	Recv() (*Info, error)
	grpc.ClientStream
}

type gamePlayClient struct {
	grpc.ClientStream
}

func (x *gamePlayClient) Send(m *Command) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gamePlayClient) Recv() (*Info, error) {
	m := new(Info)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Game service

type GameServer interface {
	Play(Game_PlayServer) error
}

func RegisterGameServer(s *grpc.Server, srv GameServer) {
	s.RegisterService(&_Game_serviceDesc, srv)
}

func _Game_Play_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GameServer).Play(&gamePlayServer{stream})
}

type Game_PlayServer interface {
	Send(*Info) error
	Recv() (*Command, error)
	grpc.ServerStream
}

type gamePlayServer struct {
	grpc.ServerStream
}

func (x *gamePlayServer) Send(m *Info) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gamePlayServer) Recv() (*Command, error) {
	m := new(Command)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Game_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clientserver.Game",
	HandlerType: (*GameServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Play",
			Handler:       _Game_Play_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "clientserver/basic_service.proto",
}

func init() { proto.RegisterFile("clientserver/basic_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x48, 0xce, 0xc9, 0x4c,
	0xcd, 0x2b, 0x29, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x4f, 0x4a, 0x2c, 0xce, 0x4c, 0x8e, 0x07,
	0x71, 0x32, 0x93, 0x53, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x78, 0x90, 0x55, 0x28, 0xc9,
	0x72, 0xb1, 0x3b, 0xe7, 0xe7, 0xe6, 0x26, 0xe6, 0xa5, 0x08, 0x09, 0x71, 0xb1, 0x94, 0xa4, 0x56,
	0x94, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x4a, 0x52, 0x5c, 0x2c, 0x9e, 0x79,
	0x69, 0xf9, 0xd8, 0xe4, 0x8c, 0xec, 0xb9, 0x58, 0xdc, 0x13, 0x73, 0x53, 0x85, 0xcc, 0xb9, 0x58,
	0x02, 0x72, 0x12, 0x2b, 0x85, 0x44, 0xf5, 0x90, 0x4d, 0xd6, 0x83, 0x1a, 0x2b, 0x25, 0x84, 0x2a,
	0x0c, 0x32, 0x4e, 0x89, 0x41, 0x83, 0xd1, 0x80, 0x31, 0x89, 0x0d, 0xec, 0x20, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x2c, 0xb3, 0x78, 0x0e, 0xb4, 0x00, 0x00, 0x00,
}
